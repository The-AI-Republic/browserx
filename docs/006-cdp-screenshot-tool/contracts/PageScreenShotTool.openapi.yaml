openapi: 3.1.0
info:
  title: PageScreenShotTool API Contract
  version: 1.0.0
  description: |
    API contract for the PageScreenShotTool - a CDP-based screenshot and coordinate interaction tool
    for the browserx Chrome extension AI agent.

    This tool enables visual page analysis and coordinate-based interactions as a complement to DOM-based
    page operations.

paths:
  /tool/screenshot:
    post:
      summary: Execute PageScreenShotTool action
      description: |
        Execute a screenshot capture or coordinate-based interaction action.
        This is the unified interface exposed to the LLM for all PageScreenShotTool operations.
      operationId: executeScreenshotToolAction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScreenshotToolRequest'
            examples:
              screenshotAction:
                summary: Capture viewport screenshot
                value:
                  action: screenshot
                  tab_id: 123
              screenshotWithScroll:
                summary: Capture screenshot after scrolling
                value:
                  action: screenshot
                  scroll_offset:
                    x: 0
                    y: 500
              clickAction:
                summary: Click at coordinates
                value:
                  action: click
                  coordinates:
                    x: 350
                    y: 450
                  options:
                    button: left
              typeAction:
                summary: Type text at coordinates
                value:
                  action: type
                  coordinates:
                    x: 200
                    y: 300
                  text: "hello@example.com"
              scrollAction:
                summary: Scroll to coordinates
                value:
                  action: scroll
                  coordinates:
                    x: 0
                    y: 1000
              keypressAction:
                summary: Press keyboard key
                value:
                  action: keypress
                  key: Enter
                  options:
                    modifiers:
                      ctrl: true
      responses:
        '200':
          description: Action executed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScreenshotToolResponse'
              examples:
                screenshotSuccess:
                  summary: Screenshot captured successfully
                  value:
                    success: true
                    action: screenshot
                    data:
                      image_file_id: "file-abc123xyz"
                      width: 1920
                      height: 1080
                      format: png
                      viewport_bounds:
                        width: 1920
                        height: 1080
                        scroll_x: 0
                        scroll_y: 0
                    metadata:
                      duration_ms: 245
                      tab_id: 123
                      timestamp: "2025-10-31T12:00:00Z"
                      tool_version: "1.0.0"
                clickSuccess:
                  summary: Click action succeeded
                  value:
                    success: true
                    action: click
                    data:
                      coordinates_used:
                        x: 350
                        y: 450
                      action_timestamp: "2025-10-31T12:00:01Z"
                    metadata:
                      duration_ms: 78
                      tab_id: 123
                      timestamp: "2025-10-31T12:00:01Z"
                      tool_version: "1.0.0"
        '400':
          description: Invalid request (validation error)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalidAction:
                  summary: Unknown action type
                  value:
                    success: false
                    error:
                      code: VALIDATION_ERROR
                      message: "Invalid action type: 'capture'. Must be one of: screenshot, click, type, scroll, keypress"
                      details:
                        field: action
                        provided: capture
                        expected: "screenshot|click|type|scroll|keypress"
                missingRequired:
                  summary: Missing required field
                  value:
                    success: false
                    error:
                      code: VALIDATION_ERROR
                      message: "Missing required field: 'coordinates' for action 'click'"
                      details:
                        action: click
                        missing_field: coordinates
        '500':
          description: Internal tool error (CDP failure, storage error, etc.)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                screenshotFailed:
                  summary: Screenshot capture failed
                  value:
                    success: false
                    error:
                      code: SCREENSHOT_FAILED
                      message: "Failed to capture screenshot: CDP connection lost"
                      details:
                        cdp_error: "Target closed"
                    metadata:
                      duration_ms: 1200
                      tab_id: 123
                      timestamp: "2025-10-31T12:00:02Z"
                      tool_version: "1.0.0"

components:
  schemas:
    ScreenshotToolRequest:
      type: object
      required:
        - action
      properties:
        action:
          type: string
          enum: [screenshot, click, type, scroll, keypress]
          description: Action type to execute
        tab_id:
          type: integer
          minimum: 1
          description: Target Chrome tab ID (defaults to active tab if omitted)
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        text:
          type: string
          maxLength: 10000
          description: Text to type (required for 'type' action)
        key:
          type: string
          description: Keyboard key to press (required for 'keypress' action)
          examples: [Enter, Escape, Tab, ArrowDown, a, A, "1", " "]
        scroll_offset:
          $ref: '#/components/schemas/ScrollOffset'
        options:
          $ref: '#/components/schemas/ActionOptions'
      discriminator:
        propertyName: action
        mapping:
          screenshot: '#/components/schemas/ScreenshotActionRequest'
          click: '#/components/schemas/ClickActionRequest'
          type: '#/components/schemas/TypeActionRequest'
          scroll: '#/components/schemas/ScrollActionRequest'
          keypress: '#/components/schemas/KeypressActionRequest'

    ScreenshotActionRequest:
      allOf:
        - $ref: '#/components/schemas/ScreenshotToolRequest'
        - type: object
          properties:
            action:
              type: string
              const: screenshot
            scroll_offset:
              $ref: '#/components/schemas/ScrollOffset'

    ClickActionRequest:
      allOf:
        - $ref: '#/components/schemas/ScreenshotToolRequest'
        - type: object
          required:
            - coordinates
          properties:
            action:
              type: string
              const: click
            coordinates:
              $ref: '#/components/schemas/Coordinates'
            options:
              type: object
              properties:
                button:
                  type: string
                  enum: [left, right, middle]
                  default: left

    TypeActionRequest:
      allOf:
        - $ref: '#/components/schemas/ScreenshotToolRequest'
        - type: object
          required:
            - coordinates
            - text
          properties:
            action:
              type: string
              const: type
            coordinates:
              $ref: '#/components/schemas/Coordinates'
            text:
              type: string
              maxLength: 10000

    ScrollActionRequest:
      allOf:
        - $ref: '#/components/schemas/ScreenshotToolRequest'
        - type: object
          required:
            - coordinates
          properties:
            action:
              type: string
              const: scroll
            coordinates:
              $ref: '#/components/schemas/Coordinates'

    KeypressActionRequest:
      allOf:
        - $ref: '#/components/schemas/ScreenshotToolRequest'
        - type: object
          required:
            - key
          properties:
            action:
              type: string
              const: keypress
            key:
              type: string
            options:
              type: object
              properties:
                modifiers:
                  $ref: '#/components/schemas/KeyModifiers'

    Coordinates:
      type: object
      required:
        - x
        - y
      properties:
        x:
          type: integer
          minimum: 0
          description: Horizontal position in CSS pixels (viewport-relative, 0 = left edge)
        y:
          type: integer
          minimum: 0
          description: Vertical position in CSS pixels (viewport-relative, 0 = top edge)
      example:
        x: 350
        y: 450

    ScrollOffset:
      type: object
      properties:
        x:
          type: integer
          default: 0
          description: Horizontal scroll amount (positive = right, negative = left)
        y:
          type: integer
          default: 0
          description: Vertical scroll amount (positive = down, negative = up)
      example:
        x: 0
        y: 500

    ActionOptions:
      type: object
      properties:
        button:
          type: string
          enum: [left, right, middle]
          default: left
          description: Mouse button for click actions
        modifiers:
          $ref: '#/components/schemas/KeyModifiers'
        wait_after_action:
          type: integer
          minimum: 0
          default: 100
          description: Delay in milliseconds after action execution

    KeyModifiers:
      type: object
      properties:
        ctrl:
          type: boolean
          default: false
        shift:
          type: boolean
          default: false
        alt:
          type: boolean
          default: false
        meta:
          type: boolean
          default: false
          description: Command key (macOS) or Windows key
      example:
        ctrl: true
        shift: false

    ScreenshotToolResponse:
      type: object
      required:
        - success
        - action
        - metadata
      properties:
        success:
          type: boolean
          description: Whether the action executed successfully
        action:
          type: string
          enum: [screenshot, click, type, scroll, keypress]
          description: Action that was executed
        data:
          oneOf:
            - $ref: '#/components/schemas/ScreenshotResponseData'
            - $ref: '#/components/schemas/ActionResponseData'
          description: Action result data (present if success=true)
        error:
          $ref: '#/components/schemas/ErrorDetails'
        metadata:
          $ref: '#/components/schemas/ResponseMetadata'

    ScreenshotResponseData:
      type: object
      required:
        - image_file_id
        - width
        - height
        - format
        - viewport_bounds
      properties:
        image_file_id:
          type: string
          description: Identifier for the uploaded image in LLM context
          example: "file-abc123xyz"
        width:
          type: integer
          minimum: 1
          description: Screenshot width in pixels
        height:
          type: integer
          minimum: 1
          description: Screenshot height in pixels
        format:
          type: string
          const: png
          description: Image format (always PNG)
        viewport_bounds:
          $ref: '#/components/schemas/ViewportBounds'

    ActionResponseData:
      type: object
      required:
        - coordinates_used
        - action_timestamp
      properties:
        coordinates_used:
          $ref: '#/components/schemas/Coordinates'
        action_timestamp:
          type: string
          format: date-time
          description: ISO 8601 timestamp when action was executed

    ViewportBounds:
      type: object
      required:
        - width
        - height
        - scroll_x
        - scroll_y
      properties:
        width:
          type: integer
          minimum: 1
          description: Viewport width in pixels
        height:
          type: integer
          minimum: 1
          description: Viewport height in pixels
        scroll_x:
          type: integer
          minimum: 0
          description: Horizontal scroll position (document coordinates)
        scroll_y:
          type: integer
          minimum: 0
          description: Vertical scroll position (document coordinates)
      example:
        width: 1920
        height: 1080
        scroll_x: 0
        scroll_y: 500

    ErrorResponse:
      type: object
      required:
        - success
        - error
      properties:
        success:
          type: boolean
          const: false
        error:
          $ref: '#/components/schemas/ErrorDetails'
        metadata:
          $ref: '#/components/schemas/ResponseMetadata'

    ErrorDetails:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          enum:
            - VALIDATION_ERROR
            - SCREENSHOT_FAILED
            - INVALID_COORDINATES
            - CDP_CONNECTION_LOST
            - TAB_NOT_FOUND
            - FILE_STORAGE_ERROR
            - UPLOAD_FAILED
          description: Error code identifier
        message:
          type: string
          description: Human-readable error description
        details:
          type: object
          additionalProperties: true
          description: Additional error context (varies by error type)

    ResponseMetadata:
      type: object
      required:
        - duration_ms
        - tab_id
        - timestamp
        - tool_version
      properties:
        duration_ms:
          type: integer
          minimum: 0
          description: Total action execution time in milliseconds
        tab_id:
          type: integer
          minimum: 1
          description: Tab where action was executed
        timestamp:
          type: string
          format: date-time
          description: ISO 8601 timestamp of response
        tool_version:
          type: string
          description: PageScreenShotTool version identifier
          example: "1.0.0"

    # Extended DOM Model Schema
    SerializedNode:
      type: object
      description: |
        Extended SerializedNode from src/types/domTool.ts with inViewport field added.
        This schema shows only the NEW field - see src/types/domTool.ts for complete interface.
      properties:
        node_id:
          type: integer
          description: Sequential node ID (inherited)
        tag:
          type: string
          description: HTML tag name (inherited)
        inViewport:
          type: boolean
          description: |
            NEW FIELD: Whether node is currently visible in viewport.
            True if >50% of element area intersects with visible viewport.
          default: false
      required:
        - node_id
        - tag

tags:
  - name: screenshot
    description: Screenshot capture operations
  - name: coordinate-actions
    description: Coordinate-based interactions (click, type, scroll, keypress)
  - name: viewport-detection
    description: Viewport visibility detection for DOM nodes
